# Configuration for zsh in Linux

# Enable Powerlevel10k instant prompt
if [[ -r "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh" ]]; then
  source "${XDG_CACHE_HOME:-$HOME/.cache}/p10k-instant-prompt-${(%):-%n}.zsh"
fi

# Initialize Zinit
ZINIT_HOME="${XDG_DATA_HOME:-${HOME}/.local/share}/zinit/zinit.git"
source "${ZINIT_HOME}/zinit.zsh"

# Load Powerlevel10k theme
zinit ice depth=1
zinit light romkatv/powerlevel10k

# Load plugins
zinit light zsh-users/zsh-autosuggestions
zinit light zdharma-continuum/fast-syntax-highlighting
zinit light zsh-users/zsh-completions

# Disable paste highlighting
zle_highlight+=(paste:none)

# History configuration
HISTFILE=~/.zsh_history
HISTSIZE=10000
SAVEHIST=10000
setopt appendhistory
setopt HIST_EXPIRE_DUPS_FIRST
setopt HIST_IGNORE_DUPS
setopt HIST_IGNORE_ALL_DUPS
setopt HIST_FIND_NO_DUPS
setopt HIST_SAVE_NO_DUPS

# Basic aliases
alias ls='ls --color=auto'
alias ll='ls -alF'
alias la='ls -A'
alias l='ls -CF'
alias c='clear'

# Development aliases
alias venv='source venv/bin/activate'
alias py='python3'
alias pip='pip3'

# Directory navigation
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'

# WSL-specific aliases
if uname -r | grep -q "WSL"; then
    # Windows path-related aliases
    alias cdco='cd /mnt/d/code'
    alias cddo='cd /mnt/c/Users/Andre/Downloads'
    alias cduni='cd /mnt/c/Users/AndreP/OneDrive\ -\ UNIVERSIDAD\ NACIONAL\ DE\ INGENIERIA/UNI-HUB/UNI\ 2024-2/'
    
    # Windows integration aliases
    alias cu='cursor .'
    alias ex='explorer.exe .'

    # YaVendio utils
    alias yavgatestg='cd ~/yav/message-gateway && git pull --rebase && vim config/stg.yaml'
    alias yavgateprd='cd ~/yav/message-gateway && git pull --rebase && vim config/prd.yaml'
    alias cdya='cd /mnt/d/yavendio/clients_backends'
fi

# Keep cdh as it's useful in both WSL and Linux
alias cdh='cd /home/andre'

# Shell integrations
[ -f ~/.fzf.zsh ] && source ~/.fzf.zsh
if command -v zoxide > /dev/null; then
    eval "$(zoxide init zsh)"
fi

# Conda configuration
export CRYPTOGRAPHY_OPENSSL_NO_LEGACY=1

# >>> conda initialize >>>
# !! Contents within this block are managed by 'conda init' !!
__conda_setup="$('/opt/miniconda3/bin/conda' 'shell.zsh' 'hook' 2> /dev/null)"
if [ $? -eq 0 ]; then
    eval "$__conda_setup"
else
    if [ -f "/opt/miniconda3/etc/profile.d/conda.sh" ]; then
        . "/opt/miniconda3/etc/profile.d/conda.sh"
    else
        export PATH="/opt/miniconda3/bin:$PATH"
    fi
fi
unset __conda_setup
# <<< conda initialize <<<

# Key bindings
bindkey "^[[H" beginning-of-line       # Home
bindkey "^[[F" end-of-line             # End
bindkey "^[[1;5C" forward-word         # Ctrl + Right arrow
bindkey "^[[1;5D" backward-word        # Ctrl + Left arrow
bindkey "^[[3~" delete-char            # Delete
bindkey "^H" backward-delete-char      # Backspace
bindkey "^[[3;5~" delete-word          # Ctrl + Delete
bindkey "^W" backward-kill-word        # Ctrl + W

# Load custom completions
autoload -Uz compinit
compinit

# Set vi mode
bindkey -v
export KEYTIMEOUT=1

# Enable correction
setopt correct

# Load Powerlevel10k configuration
if [[ -f ~/.p10k.zsh ]]; then
    source ~/.p10k.zsh
else
    # Run configuration wizard if file doesn't exist
    if command -v p10k > /dev/null; then
        p10k configure
    fi
fi# Safety switch back to backup shell
switch_to_backup_shell() {
    if [ -x "$BACKUP_SHELL" ]; then
        exec "$BACKUP_SHELL"
    fi
}
